from Code import bfgs_solver
import numpy as np

def f(x):
    return (1.5 - x[0] + x[0]*x[1])**2 + (2.25 - x[0] + x[0]*x[1]**2)**2 + (2.625 - x[0] + x[0]*x[1]**3)**2


def fp(x):
    return np.array([(2*(1.5 - x[0] + x[0]*x[1])*(-1 + x[1]) + 2*(2.25 - x[0] + x[0]*x[1]**2)*(-1 + x[1]**2)
                      + 2*(2.625 - x[0] + x[0]*x[1]**3)*(-1 + x[1]**3)), (2*(1.5 - x[0] + x[0]*x[1])*x[0] + 2*(2.25 - x[0]
                      + x[0]*x[1]**2)*(2*x[1]*x[0]) + 2*(2.625 - x[0] + x[0]*x[1]**3) * (3*x[1]**2*x[0]))], dtype=float)

x0 = np.asarray([2, 2])

tol = 1e-6
max_its = 1000

solver_bfgs = bfgs_solver.BFGSSolver(x0, max_its, tol)
solver_bfgs.solve(f, fp, Time=True)
print(solver_bfgs)
